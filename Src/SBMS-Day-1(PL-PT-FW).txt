
	>>>>>>Programming Language<<<<<<<
	-------------------------------------------------------
		-> These are directly installable s/w as raw material provide basic features 
		     of application development.

		-> These language define syntax (rules) and semantics (structure) by giving
		     compiler and interpreters.

		-> These are base to create s/w technology, framework , db s/w, os, tools,..

		     EX :-> c,c++,java,c# and etc..

	>>>>>>Software Technology<<<<<<<
	----------------------------------------------------
		-> It is a software specification providinng rules and guidelines to Vendor com
		    to create implementation software by using one or another programming lang

		-> Software tecchnology are not installable, but software technology based impl
		    s/w arrangable or installable and working them is nothing but working software
		    technologies

		    eg :-> JDBC, Servlet, JMS and etc..

		-> JDBC technology provides set of rules and guidelines to create JDBC driver 
		    s/w using the java language

		-> Working with JDBC driver s/w is nothing but working with JDBC technology.

	>>>>>Technology API Gives<<<<<
	-----------------------------------------------
		interface			 -> representing rules
		concreates classes	 -> representing guidelines
		abstract clasess	 -> representing both rules and guidelines

		-> From Java 8V interface represent both rules and guidelines

	>>>>>>Types Of Technologies<<<<<<<
	------------------------------------------------------
		1. Open Technologies 
			-> Here the technology rules and guidelines are to open all s/w vendor comp
			    to create and release implementation s/w 

			 eg : All java technologies
			        like JDBC,Servlet,JSP and etc..

		2. Propritrierary Technologies
			-> Herer the vendor who created the technology having rules and guidelines in 
			    only allowed to develop the implementation sotwares
			    
			eg : All microsoft technology like asp.net

	>>>>>>Framework<<<<<<<
	--------------------------------------
		-> If we are developing java application using tecchnologies and language then we 
		    need to write both common logics and application specific logics  (improve burden
		    on the programmer) like house construction by our own

		-> If we are developing java application using framework then we need to write only
		    application specific logic because the common will be generated by frameworks 
		    dynamically and internally using one or another technologies (descrease burden
		    on the programmer) like house purchase from ReadEstare Builder
		    
	>>>>>>Plain JDBC Application<<<<<<<
	------------------------------------------------------
		Common Logic
		--------------------
		-> Active the JDBC deiver s/w by loading the JDBC driver class
		-> Establish the connection with DB s/w
		-> Create the statement object
		
		Application Specific Logic
		----------------------------------
		-> Send and execute the SQL query in DB s/w
		-> Gather the result and process the result

		Common Logic
		--------------------
		-> Exception handling 
		-> Close the connection with DB s/w

		=> We need to write both common logics and application specific logic
		    i.e there is a boilerp;ate code problem

	>>>>>>Spring JDBC Application(FW)<<<<<<<
	---------------------------------------------------------------
		-> Create JdbcTemplate class object, takes care of common logics
		-> Sned and execute SQL query in DB s/w
		-> Gather result and process result

		=> There is no boilerplare code problem, programmers just need to develop
		      only application specific logics


